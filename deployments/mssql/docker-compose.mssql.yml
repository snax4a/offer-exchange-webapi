version: "3.4"
services:
  redis:
    image: redis
    ports:
      - "6579:6379"
    restart: unless-stopped
    container_name: redis-for-dotnet-webapi-with-mssql

  api:
    image: "snax4a/offer-exchange-api:${API_TAG}"
    environment:
      - "DatabaseSettings__ConnectionString=Server=db;Database=rootTenantDb;Use\
        r=sa;Password=${DB_PASSWORD};MultipleActiveResultSets=true"
      - "DatabaseSettings__DBProvider=mssql"
      - "HangfireSettings__Storage__ConnectionString=Server=db;Database=rootTen\
        antDb;User=sa;Password=${DB_PASSWORD};MultipleActiveResultSets=true"
      - "HangfireSettings__Storage__StorageProvider=mssql"
      - "CacheSettings__RedisURL=redis"
      - "ASPNETCORE_Kestrel__Certificates__Default__Password=${DB_PASSWORD}"
      - "ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx"
      - "ASPNETCORE_URLS=https://+:5051;http://+:5061"
    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - "5051:5051"
      - "5061:5061"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    container_name: api

  db:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      - "SA_PASSWORD=${DB_PASSWORD}"
      - "ACCEPT_EULA=Y"
    container_name: mssql
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q
        "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
